# Tested with apache 2.4.10
# Requires the modules "proxy" and "proxy_http", plus "ssl" for https support.
<VirtualHost *:80>
	<Location "/_api/agendadulibre">
		ProxyPass "http://agendadulibre.org/events.json"
		ProxyPassReverse "http://agendadulibre.org/events.json"
		# Currently (2017-03-01), agendadulibre's backend is written in ruby, which helpufully "corrects"
		# what it thinks is the fqdn of the server based on the header X-Forwarded-Host. It results
		# in urls in the response pointing to your reverse proxy instead of pointing to agendadulibre.org.
		ProxyAddHeaders Off
		# Change "example.com" to the domain name your clients will be accessing the website from.
		Header add "Access-Control-Allow-Origin" "example.com"
	</Location>
</VirtualHost>

<IfModule mod_ssl.c>
	<VirtualHost *:443>
		SSLEngine on
		SSLCertificateFile	/path/to/cert/file
		SSLCertificateKeyFile /path/to/private/key
		<Location "/_api/agendadulibre">
			ProxyPass "https://agendadulibre.org/events.json"
			ProxyPassReverse "https://agendadulibre.org/events.json"
			# Change "example.com" to the domain name your clients will be accessing the website from.
			# Currently (2017-03-01), agendadulibre's backend is written in ruby, which helpufully "corrects"
			# what it thinks is the fqdn of the server based on the header X-Forwarded-Host. It results
			# in urls in the response pointing to your reverse proxy instead of pointing to agendadulibre.org.
			ProxyAddHeaders Off
			Header add "Access-Control-Allow-Origin" "example.com"
		</Location>
	</VirtualHost>
</IfModule>
